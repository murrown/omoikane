# Generated by Django 2.0.6 on 2018-07-03 20:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import quiz.user_models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Association',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_id', models.IntegerField(db_index=True, null=True)),
                ('reading', models.CharField(max_length=75, null=True)),
                ('sense', models.TextField()),
                ('sense_number', models.IntegerField()),
                ('pos', models.CharField(max_length=100, null=True)),
                ('priority', models.IntegerField(db_index=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Expression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(db_index=True, max_length=100, unique=True)),
                ('audio', models.CharField(max_length=32, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpressionKeyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_id', models.IntegerField(db_index=True)),
                ('key', models.CharField(db_index=True, max_length=24)),
                ('value', models.TextField(db_index=True, default='')),
                ('expression', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.Expression')),
            ],
        ),
        migrations.CreateModel(
            name='QuizList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuizListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_order', models.IntegerField()),
                ('expression', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.Expression')),
                ('quizlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.QuizList')),
            ],
        ),
        migrations.CreateModel(
            name='ReadingKeyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_id', models.IntegerField(db_index=True)),
                ('key', models.CharField(db_index=True, max_length=24)),
                ('value', models.TextField(db_index=True, default='')),
                ('reading', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='SenseKeyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_id', models.IntegerField(db_index=True)),
                ('key', models.CharField(db_index=True, max_length=24)),
                ('value', models.TextField(db_index=True, default='')),
                ('sense_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserExpression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('due', models.DateTimeField(default=quiz.user_models.utcnow)),
                ('interval', models.IntegerField(default=0)),
                ('expression', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.Expression')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserGuess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField()),
                ('user_expression', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.UserExpression')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='sensekeyvalue',
            unique_together={('key', 'value', 'entry_id', 'sense_number')},
        ),
        migrations.AlterIndexTogether(
            name='sensekeyvalue',
            index_together={('key', 'value')},
        ),
        migrations.AlterUniqueTogether(
            name='readingkeyvalue',
            unique_together={('key', 'value', 'entry_id', 'reading')},
        ),
        migrations.AlterIndexTogether(
            name='readingkeyvalue',
            index_together={('key', 'value')},
        ),
        migrations.AddField(
            model_name='association',
            name='expression',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='quiz.Expression'),
        ),
        migrations.AlterUniqueTogether(
            name='userexpression',
            unique_together={('user', 'expression')},
        ),
        migrations.AlterIndexTogether(
            name='userexpression',
            index_together={('user', 'expression')},
        ),
        migrations.AlterUniqueTogether(
            name='quizlistitem',
            unique_together={('quizlist', 'list_order'), ('quizlist', 'expression')},
        ),
        migrations.AlterUniqueTogether(
            name='expressionkeyvalue',
            unique_together={('key', 'value', 'entry_id', 'expression')},
        ),
        migrations.AlterIndexTogether(
            name='expressionkeyvalue',
            index_together={('key', 'value')},
        ),
        migrations.AlterUniqueTogether(
            name='association',
            unique_together={('expression', 'reading', 'sense')},
        ),
    ]
